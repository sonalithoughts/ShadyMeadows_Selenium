<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="4" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-07-13T21:02:00 BST" name="Suite" finished-at="2025-07-13T21:03:26 BST" duration-ms="85778">
    <groups>
    </groups>
    <test started-at="2025-07-13T21:02:00 BST" name="Test" finished-at="2025-07-13T21:03:26 BST" duration-ms="85778">
      <class name="TestCases.SendMessageTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:TestCases.SendMessageTest@3f1d2e23]" started-at="2025-07-13T21:02:26 BST" name="launchApplication" finished-at="2025-07-13T21:02:28 BST" duration-ms="1274" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="SendMessage_Successful(java.util.HashMap)[pri:0, instance:TestCases.SendMessageTest@3f1d2e23]" started-at="2025-07-13T21:02:28 BST" name="SendMessage_Successful" data-provider="getData" finished-at="2025-07-13T21:02:39 BST" duration-ms="10952" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{BlankName=, Email=sonali@gmail.com, PhoneNum=01234567890, MessageDescription=Test description Test description Test description Test description Test description, WrongEmailFormat=test.gmail.com, NameWithSpecialChar=Sonali@#, Subject=Test Subject, Name=Sonali}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendMessage_Successful -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TestCases.SendMessageTest@3f1d2e23]" started-at="2025-07-13T21:02:39 BST" name="tearDown" finished-at="2025-07-13T21:02:39 BST" duration-ms="226" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:TestCases.SendMessageTest@3f1d2e23]" started-at="2025-07-13T21:02:39 BST" name="launchApplication" finished-at="2025-07-13T21:02:40 BST" duration-ms="1175" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="SendMessage_Unsuccessful_BlankName(java.util.HashMap)[pri:0, instance:TestCases.SendMessageTest@3f1d2e23]" started-at="2025-07-13T21:02:40 BST" name="SendMessage_Unsuccessful_BlankName" data-provider="getData" finished-at="2025-07-13T21:02:51 BST" duration-ms="10884" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{BlankName=, Email=sonali@gmail.com, PhoneNum=01234567890, MessageDescription=Test description Test description Test description Test description Test description, WrongEmailFormat=test.gmail.com, NameWithSpecialChar=Sonali@#, Subject=Test Subject, Name=Sonali}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendMessage_Unsuccessful_BlankName -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TestCases.SendMessageTest@3f1d2e23]" started-at="2025-07-13T21:02:51 BST" name="tearDown" finished-at="2025-07-13T21:02:51 BST" duration-ms="209" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:TestCases.SendMessageTest@3f1d2e23]" started-at="2025-07-13T21:02:51 BST" name="launchApplication" finished-at="2025-07-13T21:02:52 BST" duration-ms="1121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="SendMessage_Unsuccessful_NameContainsSpecialChar(java.util.HashMap)[pri:0, instance:TestCases.SendMessageTest@3f1d2e23]" started-at="2025-07-13T21:02:52 BST" name="SendMessage_Unsuccessful_NameContainsSpecialChar" data-provider="getData" finished-at="2025-07-13T21:03:13 BST" duration-ms="20770" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{BlankName=, Email=sonali@gmail.com, PhoneNum=01234567890, MessageDescription=Test description Test description Test description Test description Test description, WrongEmailFormat=test.gmail.com, NameWithSpecialChar=Sonali@#, Subject=Test Subject, Name=Sonali}]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":".alert-danger p"}
  (Session info: chrome=138.0.7204.101)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.34.0', revision: '707dcb4246*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [3e4de70267bc6e322f7733c6bf8dd8a5, findElement {using=css selector, value=.alert-danger p}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 138.0.7204.101, chrome: {chromedriverVersion: 138.0.7204.94 (545025748884..., userDataDir: C:\Users\samra\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:62516}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:62516/devtoo..., se:cdpVersion: 138.0.7204.101, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 3e4de70267bc6e322f7733c6bf8dd8a5]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":".alert-danger p"}
  (Session info: chrome=138.0.7204.101)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.34.0', revision: '707dcb4246*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [3e4de70267bc6e322f7733c6bf8dd8a5, findElement {using=css selector, value=.alert-danger p}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 138.0.7204.101, chrome: {chromedriverVersion: 138.0.7204.94 (545025748884..., userDataDir: C:\Users\samra\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:62516}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:62516/devtoo..., se:cdpVersion: 138.0.7204.101, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 3e4de70267bc6e322f7733c6bf8dd8a5
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:544)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:367)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:361)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy16.getText(Unknown Source)
at PageObject.LandingPage.validateErrorMessage(LandingPage.java:313)
at TestCases.SendMessageTest.SendMessage_Unsuccessful_NameContainsSpecialChar(SendMessageTest.java:121)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendMessage_Unsuccessful_NameContainsSpecialChar -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TestCases.SendMessageTest@3f1d2e23]" started-at="2025-07-13T21:03:13 BST" name="tearDown" finished-at="2025-07-13T21:03:13 BST" duration-ms="153" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:TestCases.SendMessageTest@3f1d2e23]" started-at="2025-07-13T21:03:13 BST" name="launchApplication" finished-at="2025-07-13T21:03:15 BST" duration-ms="1194" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="SendMessage_Unsuccessful_WrongEmailFormat(java.util.HashMap)[pri:0, instance:TestCases.SendMessageTest@3f1d2e23]" started-at="2025-07-13T21:03:15 BST" name="SendMessage_Unsuccessful_WrongEmailFormat" data-provider="getData" finished-at="2025-07-13T21:03:26 BST" duration-ms="10879" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{BlankName=, Email=sonali@gmail.com, PhoneNum=01234567890, MessageDescription=Test description Test description Test description Test description Test description, WrongEmailFormat=test.gmail.com, NameWithSpecialChar=Sonali@#, Subject=Test Subject, Name=Sonali}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendMessage_Unsuccessful_WrongEmailFormat -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TestCases.SendMessageTest@3f1d2e23]" started-at="2025-07-13T21:03:26 BST" name="tearDown" finished-at="2025-07-13T21:03:26 BST" duration-ms="148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- TestCases.SendMessageTest -->
      <class name="TestCases.RoomReservationTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:TestCases.RoomReservationTest@7f2cfe3f]" started-at="2025-07-13T21:02:00 BST" name="launchApplication" finished-at="2025-07-13T21:02:02 BST" duration-ms="2106" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="checkAvailabilityTest_CheckOutDateLesserThanCheckInDate(java.util.HashMap)[pri:0, instance:TestCases.RoomReservationTest@7f2cfe3f]" started-at="2025-07-13T21:02:02 BST" name="checkAvailabilityTest_CheckOutDateLesserThanCheckInDate" data-provider="getData" finished-at="2025-07-13T21:02:03 BST" duration-ms="1268" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{BackDatedCheckInMonth=July, CheckInYear=2025, CheckOutDay=10, CheckOutDayLesserThanCheckIn=8, FirstNameForReservation=Sonali, PhoneForReservation=01234567890, CheckOutMonth=August, CheckInMonth=August, BackDatedCheckInDay=7, CheckOutYear=2025, BackDatedCheckOutDay=8, EmailIDForReservation=testemail@gmail.com, BackDatedCheckOutMonth=July, CheckInDay=8, LastNameForReservation=TestLName}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Text not matching! expected [Check Out Date cannot be lesser than Check In Date] but found [Our Rooms]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Text not matching! expected [Check Out Date cannot be lesser than Check In Date] but found [Our Rooms]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at TestCases.RoomReservationTest.checkAvailabilityTest_CheckOutDateLesserThanCheckInDate(RoomReservationTest.java:216)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAvailabilityTest_CheckOutDateLesserThanCheckInDate -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TestCases.RoomReservationTest@7f2cfe3f]" started-at="2025-07-13T21:02:04 BST" name="tearDown" finished-at="2025-07-13T21:02:04 BST" duration-ms="161" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:TestCases.RoomReservationTest@7f2cfe3f]" started-at="2025-07-13T21:02:04 BST" name="launchApplication" finished-at="2025-07-13T21:02:05 BST" duration-ms="1229" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="checkAvailabilityTest_backdatedCheckInAndCheckOutDate(java.util.HashMap)[pri:0, instance:TestCases.RoomReservationTest@7f2cfe3f]" started-at="2025-07-13T21:02:05 BST" name="checkAvailabilityTest_backdatedCheckInAndCheckOutDate" data-provider="getData" finished-at="2025-07-13T21:02:06 BST" duration-ms="1001" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{BackDatedCheckInMonth=July, CheckInYear=2025, CheckOutDay=10, CheckOutDayLesserThanCheckIn=8, FirstNameForReservation=Sonali, PhoneForReservation=01234567890, CheckOutMonth=August, CheckInMonth=August, BackDatedCheckInDay=7, CheckOutYear=2025, BackDatedCheckOutDay=8, EmailIDForReservation=testemail@gmail.com, BackDatedCheckOutMonth=July, CheckInDay=8, LastNameForReservation=TestLName}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Text not matching! expected [Check In date and Check Out date cannot be backdated.] but found [Our Rooms]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Text not matching! expected [Check In date and Check Out date cannot be backdated.] but found [Our Rooms]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at TestCases.RoomReservationTest.checkAvailabilityTest_backdatedCheckInAndCheckOutDate(RoomReservationTest.java:170)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAvailabilityTest_backdatedCheckInAndCheckOutDate -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TestCases.RoomReservationTest@7f2cfe3f]" started-at="2025-07-13T21:02:07 BST" name="tearDown" finished-at="2025-07-13T21:02:07 BST" duration-ms="172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:TestCases.RoomReservationTest@7f2cfe3f]" started-at="2025-07-13T21:02:07 BST" name="launchApplication" finished-at="2025-07-13T21:02:08 BST" duration-ms="1046" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="successfulRoomReservation(java.util.HashMap)[pri:0, instance:TestCases.RoomReservationTest@7f2cfe3f]" started-at="2025-07-13T21:02:08 BST" name="successfulRoomReservation" data-provider="getData" finished-at="2025-07-13T21:02:26 BST" duration-ms="18299" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{BackDatedCheckInMonth=July, CheckInYear=2025, CheckOutDay=10, CheckOutDayLesserThanCheckIn=8, FirstNameForReservation=Sonali, PhoneForReservation=01234567890, CheckOutMonth=August, CheckInMonth=August, BackDatedCheckInDay=7, CheckOutYear=2025, BackDatedCheckOutDay=8, EmailIDForReservation=testemail@gmail.com, BackDatedCheckOutMonth=July, CheckInDay=8, LastNameForReservation=TestLName}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successfulRoomReservation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TestCases.RoomReservationTest@7f2cfe3f]" started-at="2025-07-13T21:02:26 BST" name="tearDown" finished-at="2025-07-13T21:02:26 BST" duration-ms="188" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- TestCases.RoomReservationTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
